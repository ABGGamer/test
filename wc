function to_base64(data)
	local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	return ((data:gsub('.', function(x) 
		local r,b='',x:byte()
		for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
		return r;
	end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
		if (#x < 6) then return '' end
		local c=0
		for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
		return b:sub(c+1,c+1)
	end)..({ '', '==', '=' })[#data%3+1])
end

function from_base64(data)
	local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	data = string.gsub(data, '[^'..b..'=]', '')
	return (data:gsub('.', function(x)
		if (x == '=') then return '' end
		local r,f='',(b:find(x)-1)
		for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
		return r;
	end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
		if (#x ~= 8) then return '' end
		local c=0
		for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
		return string.char(c)
	end))
end


local messages = {}
local atob = Base64.atob
local btoa = Base64.btoa

local function notExists(whichArray, itemName)
	if (table.find(whichArray, itemName)) then
		return false
	else
		return true
	end
end

local function notEmpty(s)
	return s ~= nil or s ~= '' or s ~= " "
end

local ws = function (dict)
	local onMessage = dict.onMessage or function(msg)
		print(msg)
	end
	local server = game:GetService('HttpService')
	local id = server:GetAsync("http://localhost:6969/api/connect/"..to_base64(dict.url))
	local function sendMessage(msg)
		wait(1)
		server:GetAsync("http://localhost:6969/api/send/"..id.."/"..to_base64(msg))
	end
	
	local loop = coroutine.create(function()
		while wait(50 / 1000) do 
			local msg = server:GetAsync("http://localhost:6969/api/poll/"..id)
			if notExists(messages, msg) then
				table.insert(messages, msg)
				if notEmpty(msg) then
					onMessage(msg)
				end
			end
		end
	end)
	coroutine.resume(loop)
	return {
		sendMessage = sendMessage,
		onMessage = onMessage
	}
end

return ws
